{
"description":"preprocessing of input data before passing to alignment",
"version":"2.0",
"subgraph_io":{
	"ports":{
		"inputs":{
			"_stdin_":"bamcollate2_ranking"
		},
		"outputs":{
			"_stdout_":"bamadapterclip"
		}
	}
},
"nodes":[
	{
		"id":"bamcollate2_ranking",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":[
			"bamcollate2", 
			{"subst":"collate_ranking_collate_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "collate", {"subst":"collate_ranking_collate_val", "required":"yes", "ifnull":"3"} ],"postproc":{"op":"concat","pad":"="}}}},
			"level=0"
		],
		"comment":"already collated suitably - just here to do the ranking in the name"
	},
	{
		"id":"bamreset_pre_alignment",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":{"select":"realignment_switch", "select_range":[1], "default":0, "comment":"remove aux tags unconditionally for realignment (realignment is non-default)",
			"cases":[
				["bamreset", "resetaux=0", {"subst":"auxfilter_flag","required":"no", "comment":"auxfilter=comma separated list of aux tags to be kept if resetaux=0"}, "level=0", "verbose=0"],
				["bamreset", "level=0", "verbose=0"]
			]
		},
		"comment":"Alignment removal also required for bamadapterclip (at least 0.0.142)"
	},
	{
		"id":"bamadapterclip",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":{"select":"realignment_switch", "select_range":[1], "default":0, "comment":"detect and clip for realign, otherwise just clip (realignment is non-default)",
			"cases":[
				["bamadapterclip", "verbose=0", "level=0"],
				["bamadapterfind", "clip=1", "verbose=0", "level=0"]
			]
		},
		"description":"Hard clip adapter sequence from reads before feeding to Tophat2"
	}
],
"edges":[
	{ "id":"bamcollate2_ranking_to_bamreset_prealn", "from":"bamcollate2_ranking", "to":"bamreset_pre_alignment" },
	{ "id":"bamreset_prealn_to_bamadapterclip", "from":"bamreset_pre_alignment", "to":"bamadapterclip" }
]
}
