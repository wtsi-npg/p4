
{
"description":"This pipeline starts with Illumina2Bam, and ends by running SplitBamByReadGroup to create separate BAM files for each sample.",
"version":"1.0",
"subst_params":[
	{
		"id":"basic_pipeline_params_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", "alignment_common.json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"id":"rpt","description":"Run/Position/TagIndex, though here it is generally only Run/Position. Used in defaults/constructors for i2b_rg,decoder_metrics,md5_file,seqchksum_file,spatial_filter_file and filtered_bam"},
	{"id":"i2b_run_path","description":"path to runfolder. Provides a base on which i2b_runfolder_path can be constructed"},
	{"id":"i2b_runfolder","description":"runfolder directory. Provides a base on which platform unit and i2b_runfolder_path can be constructed"},
	{"id":"i2b_runfolder_path","description":"full path to runfolder. Provides a base on which platform unit, intensities directory and (indirectly) basecalls directories can be constructed", 
		"subst_constructor":{
			"vals":[ {"subst":"i2b_run_path","required":"yes"}, {"subst":"i2b_runfolder","required":"yes"} ],
			"postproc":{"op":"concat","pad":"/"}
		}

	},
	{
		"id":"i2b_intensity_dir",
		"required":"yes",
		"description":"Illumina intensities directory including config xml file, and clocs, locs or pos files under lane directory, using Data/Intensities directory under runfolder if not given",
		"subst_constructor":{
			"vals":[ {"subst":"i2b_runfolder_path","required":"yes"}, "/", {"subst":"i2b_data_intensities_dir_suffix","ifnull":"Data/Intensities"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"i2b_basecalls_dir",
		"required":"no",
		"description":"Illumina basecalls directory including config xml file, and filter files, bcl, maybe scl files under lane cycle directory, using BaseCalls directory under intensities if not given.",
		"subst_constructor":{
			"vals":[ {"subst":"i2b_intensity_dir","required":"yes"}, "/", {"subst":"i2b_basecalls_dir_suffix","ifnull":"BaseCalls"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"i2b_bam_basecalls_dir",
		"required":"no",
		"description":"full path to the BAM_basecalls directory; a default parameter value for the tag_metrics qc check",
		"subst_constructor":{
			"vals":[ {"subst":"i2b_intensity_dir","required":"yes"}, "/", {"subst":"i2b_bam_basecalls_dir_suffix","required":"yes"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{"id":"i2b_lane","required":"yes","comment":"Lane number"},
	{
		"id":"i2b_pu",
		"description":"The platform unit, using runfolder name plus lane number if not given",
		"subst_constructor":{
			"vals":[ {"subst":"i2b_runfolder"}, "_", {"subst":"i2b_lane"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{"id":"i2b_library_name","description":"The name of the sequenced library"},
	{"id":"i2b_rg", "description":"ID used to link RG header record with RG tag in SAM record", "default":{"subst":"rpt"}},
	{"id":"i2b_bc_seq_val","required":"no","description":"Tag name for barcode sequence. Illumina2bam default is BC"},
	{"id":"i2b_bc_qual_val","required":"no","description":"Tag name for barcode quality. Illumina2bam default is QT"},
	{"id":"i2b_sec_bc_seq_val","required":"no","description":"Tag name for second  barcode sequence. Illumina2bam default is null"},
	{"id":"i2b_sec_bc_qual_val","required":"no","description":"Tag name for second barcode quality. Illumina2bam default is null"},
	{"id":"i2b_study_name","description":"The name of the study"},
	{
		"id":"i2b_sample_aliases",
		"default":"UNSPECIFIED",
		"comment":"produces a comma-separated string from array of i2b_sample_alias values",
		"subst_constructor":{
			"vals":{"subst":"i2b_sample_alias", "ifnull":["UNSPEC"]},
			"postproc":{"op":"concat","pad":","}
		}
	},
	{"id":"bid_opt","required":"no","default":"bamindexdecoder"},
        {
                "id":"bid_vtf",
                "required":"yes",
                "subst_constructor":{
                        "vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"bid_opt"}, ".json" ],
                        "postproc":{"op":"concat", "pad":""}
                }
        },
	{"id":"qc_check_id_run","required":"yes"},
	{"id":"qc_check_position","required":"yes","default":{"subst":"i2b_lane"}},
	{"id":"qc_check_qc_in_dir","required":"yes","default":{"subst_constructor":{"vals":[{"subst":"i2b_runfolder_path"}, "Data/Intensities", {"subst":"i2b_bam_basecalls_dir"}],"postproc":{"op":"concat","pad":"/"}}}},
	{"id":"qc_check_qc_out_dir","required":"yes","default":{"subst_constructor":{"vals":[{"subst":"qc_check_qc_in_dir"}, "no_cal/archive/qc"],"postproc":{"op":"concat","pad":"/"}}}},
	{"id":"phix_alignment_method","required":"no","default":"bwa_aln"},
        {
                "id":"alignment_vtf",
                "required":"yes",
                "subst_constructor":{
                        "vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"phix_alignment_method"}, "_alignment.json" ],
                        "postproc":{"op":"concat", "pad":""}
                }
        },
	{"id":"split_prefix","required":"yes", "default":{"subst":"outdatadir"}},
	{
		"id":"split_format",
		"required":"no",
		"subst_constructor":{
			"vals":[
				{"subst":"split_prefix"},
				"/",
				"%!.bam"
			],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"md5filename",
		"description":"md5 file name used by bamrecompress",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".bam.md5" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
        {
                "id":"seqchksum_file",
                "required":"yes",
                "subst_constructor":{
                        "vals":[ {"subst":"scs_outdir", "ifnull":{"subst":"outdatadir"}}, "/", {"subst":"rpt"}, ".post_i2b.seqchksum" ],
                        "postproc":{"op":"concat", "pad":""}
                }
        },
	{
		"id":"spatial_filter_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".bam.filter" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"spatial_filter_stats",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, "_spatial_filter.stats" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"filtered_bam",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, "_filtered.bam" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{"id":"refname_phix","required":"yes"},
	{
		"id":"reference_phix",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"reposdir"}, "/", {"subst":"refname_phix"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"id":"illumina2bam_opt","required":"yes","default":{"subst_constructor":{"vals":[ "illumina2bam", {"subst":"i2b_implementation", "ifnull":"java"}, "cmd" ],"postproc":{"op":"concat","pad":"_"}}}},
	{"id":"illumina2bam_cmd", "default":{"subst":{"subst":"illumina2bam_opt","required":"yes"}}},
	{
		"id":"illumina2bam_java_cmd",
		"required":"yes",
		"subst_constructor":{
			"vals": [
				{"subst":"java_cmd","ifnull":"java","required":"yes"},
				"-Xmx1024m",
				"-jar",{"subst":"illumina2bam_jar","required":"yes","ifnull":{"subst_constructor":{"vals":[ {"subst":"i2b_jar_path"}, "/Illumina2bam.jar" ],"postproc":{"op":"concat","pad":""}}}},
				{"subst":"i2b_intensity_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "I", {"subst":"i2b_intensity_dir","required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_basecalls_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "B", {"subst":"i2b_basecalls_dir","required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_lane_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "LANE", {"subst":"i2b_lane","required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_pu_flag","ifnull":{"subst_constructor":{"vals":[ "PU", {"subst":"i2b_pu"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_rg_flag","ifnull":{"subst_constructor":{"vals":[ "READ_GROUP_ID", {"subst":"i2b_rg"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_bc_seq_flag","ifnull":{"subst_constructor":{"vals":[ "BC_SEQ", {"subst":"i2b_bc_seq_val"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_bc_qual_flag","ifnull":{"subst_constructor":{"vals":[ "BC_QUAL", {"subst":"i2b_bc_qual_val"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_sec_bc_seq_flag","ifnull":{"subst_constructor":{"vals":[ "SEC_BC_SEQ", {"subst":"i2b_sec_bc_seq_val"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_sec_bc_qual_flag","ifnull":{"subst_constructor":{"vals":[ "SEC_BC_QUAL", {"subst":"i2b_sec_bc_qual_val"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_tile_flag","ifnull":{"subst_constructor":{"vals":[ "FIRST_TILE", {"subst":"i2b_first_tile"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_tile_limit_flag","ifnull":{"subst_constructor":{"vals":[ "TILE_LIMIT", {"subst":"i2b_tile_limit"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_library_flag","ifnull":{"subst_constructor":{"vals":[ "LIBRARY_NAME", {"subst":"i2b_library_name"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_study_name_flag","ifnull":{"subst_constructor":{"vals":[ "STUDY_NAME", {"subst":"i2b_study_name"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_sample_alias_flag","ifnull":{"subst_constructor":{"vals":[ "SAMPLE_ALIAS", {"subst":"i2b_sample_aliases"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_bc_read_flag","ifnull":{"subst_constructor":{"vals":[ "BC_READ", {"subst":"i2b_bc_read"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_index_0_flag","ifnull":{"subst_constructor":{"vals":[ "FIRST_INDEX", {"subst":"i2b_first_index_0"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_final_index_0_flag","ifnull":{"subst_constructor":{"vals":[ "FINAL_INDEX", {"subst":"i2b_final_index_0"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_index_1_flag","ifnull":{"subst_constructor":{"vals":[ "FIRST_INDEX", {"subst":"i2b_first_index_1"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_final_index_1_flag","ifnull":{"subst_constructor":{"vals":[ "FINAL_INDEX", {"subst":"i2b_final_index_1"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_0_flag","ifnull":{"subst_constructor":{"vals":[ "FIRST", {"subst":"i2b_first_0"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_final_0_flag","ifnull":{"subst_constructor":{"vals":[ "FINAL", {"subst":"i2b_final_0"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_1_flag","ifnull":{"subst_constructor":{"vals":[ "FIRST", {"subst":"i2b_first_1"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_final_1_flag","ifnull":{"subst_constructor":{"vals":[ "FINAL", {"subst":"i2b_final_1"} ],"postproc":{"op":"concat","pad":"="}}}},
				"OUTPUT=/dev/stdout",
				"COMPRESSION_LEVEL=0"
			],
			"postproc":{"op":"pack"}
		}
	},
	{
		"id":"illumina2bam_bambi_cmd",
		"required":"yes",
		"subst_constructor":{
			"vals": [
				"bambi",
				"i2b",
				{"subst":"i2b_intensity_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "--intensity-dir", {"subst":"i2b_intensity_dir","required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_basecalls_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "--basecalls-dir", {"subst":"i2b_basecalls_dir","required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_lane_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "--lane", {"subst":"i2b_lane","required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_pu_flag","ifnull":{"subst_constructor":{"vals":[ "--platform-unit", {"subst":"i2b_pu"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_rg_flag","ifnull":{"subst_constructor":{"vals":[ "--read-group-id", {"subst":"i2b_rg"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_bc_seq_flag","ifnull":{"subst_constructor":{"vals":[ "--barcode-tag", {"subst":"i2b_bc_seq_val"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_bc_qual_flag","ifnull":{"subst_constructor":{"vals":[ "--quality-tag", {"subst":"i2b_bc_qual_val"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_sec_bc_seq_flag","ifnull":{"subst_constructor":{"vals":[ "--sec-barcode-tag", {"subst":"i2b_sec_bc_seq_val"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_sec_bc_qual_flag","ifnull":{"subst_constructor":{"vals":[ "--sec-quality-tag", {"subst":"i2b_sec_bc_qual_val"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_tile_flag","ifnull":{"subst_constructor":{"vals":[ "--first-tile", {"subst":"i2b_first_tile"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_tile_limit_flag","ifnull":{"subst_constructor":{"vals":[ "--tile-limit", {"subst":"i2b_tile_limit"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_library_flag","ifnull":{"subst_constructor":{"vals":[ "--library-name", {"subst":"i2b_library_name"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_study_name_flag","ifnull":{"subst_constructor":{"vals":[ "--study-name", {"subst":"i2b_study_name"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_sample_alias_flag","ifnull":{"subst_constructor":{"vals":[ "--sample-alias", {"subst":"i2b_sample_aliases"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_bc_read_flag","ifnull":{"subst_constructor":{"vals":[ "--bc-read", {"subst":"i2b_bc_read"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_index_0_flag","ifnull":{"subst_constructor":{"vals":[ "--first-index-cycle", {"subst":"i2b_first_index_0"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_final_index_0_flag","ifnull":{"subst_constructor":{"vals":[ "--final-index-cycle", {"subst":"i2b_final_index_0"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_index_1_flag","ifnull":{"subst_constructor":{"vals":[ "--first-index-cycle", {"subst":"i2b_first_index_1"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_final_index_1_flag","ifnull":{"subst_constructor":{"vals":[ "--final-index-cycle", {"subst":"i2b_final_index_1"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_0_flag","ifnull":{"subst_constructor":{"vals":[ "--first-cycle", {"subst":"i2b_first_0"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_final_0_flag","ifnull":{"subst_constructor":{"vals":[ "--final-cycle", {"subst":"i2b_final_0"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_first_1_flag","ifnull":{"subst_constructor":{"vals":[ "--first-cycle", {"subst":"i2b_first_1"} ],"postproc":{"op":"concat","pad":"="}}}},
				{"subst":"i2b_final_1_flag","ifnull":{"subst_constructor":{"vals":[ "--final-cycle", {"subst":"i2b_final_1"} ],"postproc":{"op":"concat","pad":"="}}}},
				"--output-file=-",
				"--compression-level=0"
			],
			"postproc":{"op":"pack"}
		}
	}
],
"nodes":[
	{
		"id":"illumina2bam",
		"type":"EXEC",
		"use_STDIN":false,
		"use_STDOUT":true,
		"comment":"Actual executable used depends on the value of the 12b_implementation parameter: java - use illumina2bam (default); bambi - use new bambi i2b",
		"cmd":{"subst":"illumina2bam_cmd","required":"yes"},
		"description":"Create the initial BAM file from the data generated by the Illumina machine"
	},
	{
		"id":"tee_i2b",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
                "cmd":
			[
				{"subst":"teepot_executable", "ifnull":"teepot"},
				{"subst":"ti2b_tmpdirflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tee_i2b_teepot_tempdir", "ifnull":{"subst":"teepot_tempdir"}} ]}}},
				{"subst":"teepot_vflag", "ifnull":"-v"},
				{"subst":"ti2b_wflag","ifnull":{"subst_constructor":{"vals":[ "-w", {"subst":"tee_i2b_teepot_wval", "ifnull":{"subst":"teepot_wval"}} ]}}},
				{"subst":"ti2b_mflag","ifnull":{"subst_constructor":{"vals":[ "-m", {"subst":"tee_i2b_teepot_mval", "ifnull":{"subst":"teepot_mval"}} ]}}},
				{"subst":"ti2b_fflag","ifnull":{"subst_constructor":{"vals":[ "-f", {"subst":"tee_i2b_teepot_fval", "ifnull":{"subst":"teepot_fval"}} ]}}},
				{"subst":"ti2b_pflag", "ifnull":{"subst":"teepot_pval"}, "comment":"default to no flag; should be set to -p or -P"},
				"__SCS_OUT__",
				"__BAF_OUT__"
			]
	},
	{
		"id":"bamadapterfind",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[ "bamadapterfind", "level=0" ],
		"description":"Find and mark the adaptors used by Illumina"
	},
	{
		"id":"bamindexdecoder",
		"type":"VTFILE",
		"comment":"inputs: _stdin_ (bam); outputs: _stdout_ (bam)",
		"node_prefix":"bid_",
                "name":{"subst":"bid_vtf"},
		"description":"subgraph containing index decoding options (decode or passthrough)"
	},
	{
		"id":"bamcollate",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[ "bamcollate2", "collate=2", "level=0" ]
	},
	{
		"id":"tee_collated",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
                "cmd":
			[
				{"subst":"teepot_executable", "ifnull":"teepot"},
				{"subst":"tctp_tmpdirflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tee_collated_teepot_tempdir", "ifnull":{"subst":"teepot_tempdir"}} ]}}},
				{"subst":"teepot_vflag", "ifnull":"-v"},
				{"subst":"tctp_wflag","ifnull":{"subst_constructor":{"vals":[ "-w", {"subst":"tee_collated_teepot_wval", "ifnull":{"subst":"teepot_wval"}} ]}}},
				{"subst":"tctp_mflag","ifnull":{"subst_constructor":{"vals":[ "-m", {"subst":"tee_collated_teepot_mval", "ifnull":{"subst":"teepot_mval"}} ]}}},
				{"subst":"tctp_fflag","ifnull":{"subst_constructor":{"vals":[ "-f", {"subst":"tee_collated_teepot_fval", "ifnull":{"subst":"teepot_fval"}} ]}}},
				{"subst":"tctp_pflag", "ifnull":{"subst":"teepot_pval"}, "comment":"default to no flag; should be set to -p or -P"},
				"__TD1_OUT__",
				"__TD2_OUT__"
			]
	},
	{
		"id":"simple_cat",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":"cat"
	},
        {
                "id":"alignment_phix",
                "type":"VTFILE",
                "comment":"inputs: _stdin_ (bam), reference; outputs: _stdout_ (bam)",
                "node_prefix":"alnphix_",
                "name":{"subst":"alignment_vtf"},
                "description":"subgraph containing alignment process"
        },
	{
		"id":"reference_phix",
		"type":"INFILE",
		"name":{"subst":"reference_phix"},
		"description":"Prefix for Phix reference"
	},
	{
		"id":"bammerge",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[ "bam12auxmerge", "level=0", "rankstrip=1", "ranksplit=1", "zztoname=0", "clipreinsert=1", "__UNALN_BAM_IN__" ]
	},
	{
		"id":"tee_prefilter",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
                "cmd":
			[
				{"subst":"teepot_executable", "ifnull":"teepot"},
				{"subst":"tpf_tmpdirflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tee_prefilter_teepot_tempdir", "ifnull":{"subst":"teepot_tempdir"}} ]}}},
				{"subst":"teepot_vflag", "ifnull":"-v"},
				{"subst":"tpf_wflag","ifnull":{"subst_constructor":{"vals":[ "-w", {"subst":"tee_prefilter_teepot_wval", "ifnull":{"subst":"teepot_wval"}} ]}}},
				{"subst":"tpf_mflag","ifnull":{"subst_constructor":{"vals":[ "-m", {"subst":"tee_prefilter_teepot_mval", "ifnull":{"subst":"teepot_mval"}} ]}}},
				{"subst":"tpf_fflag","ifnull":{"subst_constructor":{"vals":[ "-f", {"subst":"tee_prefilter_teepot_fval", "ifnull":{"subst":"teepot_fval"}} ]}}},
				{"subst":"tpf_pflag", "ifnull":{"subst":"teepot_pval"}, "comment":"default to no flag; should be set to -p or -P"},
				"__PF1_OUT__",
				"__PF2_OUT__"
			]
	},
	{
		"id":"create_filter",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[
			"spatial_filter",
			"-c", "-q",
			{"subst":"sp_tvflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tileviz_dir"} ]}}},
			"-F", "/dev/stdout", "/dev/stdin"
		],
		"description":"Create a spatial filter"
	},
	{
		"id":"tee_post_filter_creation",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
                "cmd":
			[
				{"subst":"teepot_executable", "ifnull":"teepot"},
				{"subst":"tpfc_tmpdirflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tee_post_filter_creation_teepot_tempdir", "ifnull":{"subst":"teepot_tempdir"}} ]}}},
				{"subst":"teepot_vflag", "ifnull":"-v"},
				{"subst":"tpfc_wflag","ifnull":{"subst_constructor":{"vals":[ "-w", {"subst":"tee_postfilter_creation_teepot_wval", "ifnull":{"subst":"teepot_wval"}} ]}}},
				{"subst":"tpfc_mflag","ifnull":{"subst_constructor":{"vals":[ "-m", {"subst":"tee_postfilter_creation_teepot_mval", "ifnull":{"subst":"teepot_mval"}} ]}}},
				{"subst":"tpfc_fflag","ifnull":{"subst_constructor":{"vals":[ "-f", {"subst":"tee_postfilter_teepot_fval", "ifnull":{"subst":"teepot_fval"}} ]}}},
				{"subst":"tpfc_pflag", "ifnull":{"subst":"teepot_pval"}, "comment":"default to no flag; should be set to -p or -P"},
				"__FILE_OUT__",
				"__APPLY_FILTER_OUT__"
			],
		"comment":"this tee added to prevent blocking caused by delayed apply_filter execution"
	},
	{
		"id":"spatial_filter_file",
		"type":"RAFILE",
		"name":{"subst":"spatial_filter_file"},
		"description":"spatial filter file"
	},
	{
		"id":"bamtocram",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[
			"scramble",
			"-I", "bam",
			"-O", "cram",
			"-x",
			{"subst":"b2c_compression", "ifnull":"-3"}
		],
		"description":"bam to cram conversion before application of spatial filter file"
	},
	{
		"id":"unfiltered_cram_file",
		"type":"RAFILE",
		"name":{"subst":"unfiltered_cram_file", "required":"yes", "ifnull":"unfiltered.cram"},
		"description":"cram file (before spatial filter application)"
	},
	{
		"id":"cramtobam",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[
			"scramble",
			"-I", "cram",
			"-O", "bam",
			{"subst":"c2b_compression", "ifnull":"-0"}
		],
		"description":"cram to bam conversion before application of spatial filter file"
	},
	{
		"id":"apply_filter",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[ "spatial_filter", "-u", "-a", "-f", "-F", "__FILTER_IN__", "/dev/stdin", "-l", "__APPLY_STATS_OUT__" ],
		"description":"Apply a spatial filter"
	},
	{ "id":"spatial_filter_stats", "type":"OUTFILE", "name":{"subst":"spatial_filter_stats"} },
        {
                "id":"final_stage1_process",
                "type":"VTFILE",
                "node_prefix":"fs1p_",
                "comment":"inputs: _stdin_ (bam); outputs: compressed bam stream, seqchksum (and possibly deplexed bams)",
                "name":{"subst":"seqchksum","required":"yes","ifnull":{"subst_constructor":{ "vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"fs1p","required":"yes", "ifnull": "final_stage1_process.json"} ], "postproc":{"op":"concat", "pad":""} }}},
                "description":"subgraph containing final stage1 processing"
        },
	{ "id":"seqchksum_file", "type":"OUTFILE", "name":{"subst":"seqchksum_file"} },
	{
		"id":"filtered_bam",
		"type":"OUTFILE",
		"name":{"subst":"filtered_bam"},
		"description":"BAM file after PhiX alignment and spatial filtering"
	},
        {
                "id":"final_seqchksum",
                "type":"VTFILE",
                "node_prefix":"scs_",
                "comment":"inputs: _stdin_ (start bam), target_seqchksum",
                "name":{"subst":"seqchksum","required":"yes","ifnull":{"subst_constructor":{ "vals":[ {"subst":"cfgdatadir"}, "/", "seqchksum_stage1.json" ], "postproc":{"op":"concat", "pad":""} }}},
                "description":"subgraph containing seqchksum validation of outputs"
        }
],
"edges":[
	{ "id":"illumina2bam_to_ti2b", "from":"illumina2bam", "to":"tee_i2b" },
	{ "id":"ti2b_to_bamadapterfind", "from":"tee_i2b:__BAF_OUT__", "to":"bamadapterfind" },
	{ "id":"bamadapterfind_to_decoder", "from":"bamadapterfind", "to":"bamindexdecoder" },
	{ "id":"bamindexdecoder_to_collate", "from":"bamindexdecoder", "to":"bamcollate" },
	{ "id":"collate_to_tee", "from":"bamcollate", "to":"tee_collated" },
	{ "id":"tee_collated_to_cat", "from":"tee_collated:__TD1_OUT__", "to":"simple_cat" },
	{ "id":"cat_to_merge", "from":"simple_cat", "to":"bammerge:__UNALN_BAM_IN__" },
	{ "id":"tee_collated_to_alignment", "from":"tee_collated:__TD2_OUT__", "to":"alignment_phix" },
	{ "id":"ref_to_alignment", "from":"reference_phix", "to":"alignment_phix:reference" },
	{ "id":"alignment_to_merge", "from":"alignment_phix", "to":"bammerge" },
	{ "id":"merge_to_prefilter", "from":"bammerge", "to":"tee_prefilter" },
	{ "id":"prefilter_to_create_filter", "from":"tee_prefilter:__PF1_OUT__", "to":"create_filter" },
	{ "id":"create_filter_to_tee", "from":"create_filter", "to":"tee_post_filter_creation" },
	{ "id":"tee_filter_file", "from":"tee_post_filter_creation:__FILE_OUT__", "to":"spatial_filter_file" },
	{ "id":"tee_to_apply_filter", "from":"tee_post_filter_creation:__APPLY_FILTER_OUT__", "to":"apply_filter:__FILTER_IN__" },
	{ "id":"prefilter_to_b2c", "from":"tee_prefilter:__PF2_OUT__", "to":"bamtocram" },
	{ "id":"b2c_to_ufc", "from":"bamtocram", "to":"unfiltered_cram_file" },
	{ "id":"ufc_to_c2b", "from":"unfiltered_cram_file", "to":"cramtobam" },
	{ "id":"c2b_to_apply", "from":"cramtobam", "to":"apply_filter" },
	{ "id":"apply_filter_to_fs1p", "from":"apply_filter", "to":"final_stage1_process" },
	{ "id":"apply_filter_to_sfqc", "from":"apply_filter:__APPLY_STATS_OUT__", "to":"spatial_filter_stats" },
	{ "id":"fs1p_to_tee", "from":"final_stage1_process", "to":"filtered_bam" },
	{ "id":"fs1p_to_tee", "from":"final_stage1_process:__SEQCHKSUM_OUT__", "to":"seqchksum_file" },
	{ "id":"fopt_to_scs", "from":"seqchksum_file", "to":"final_seqchksum:target_seqchksum" },
	{ "id":"ti2b_to_bam", "from":"tee_i2b:__SCS_OUT__", "to":"final_seqchksum" }
]
}
