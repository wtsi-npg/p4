{
"version":"2.0",
"description":"run bwa aln to to align input bam to supplied reference genome; cat nodes used to avoid creation of intermediate files",
"subgraph_io":{
	"ports":{
		"inputs":{
			"_stdin_":"tee4",
			"reference":["bwa_aln_1:reference_genome_fasta", "bwa_aln_2:reference_genome_fasta", "bwa_sampe:reference_genome_fasta"]
		},
		"outputs":{
			"_stdout_":"samtobam"
		}
	}
},
"subst_params":[
        {
                "id": "basic_pipeline_params",
                "type":"SPFILE",
		"name":{"subst":"basic_pipeline_params_file"},
                "required": "no",
                "comment":"this will expand to a set of subst_param elements"
        }
],
"nodes":[
	{
		"id":"tee4",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
		"cmd":[
			"teepot",
			{"subst":"teepot_vflag", "ifnull":"-v"},
			{"subst":"bwa_aln_teepot_wflag","ifnull":{"subst_constructor":{"vals":[ "-w", {"subst":"bwa_aln_teepot_wval", "ifnull":"300"} ]}}},
			{"subst":"bwa_aln_teepot_mflag","ifnull":{"subst_constructor":{"vals":[ "-m", {"subst":"bwa_aln_teepot_mval", "ifnull":"1G"} ]}}},
			{"subst":"bwa_aln_teepot_fflag","ifnull":{"subst_constructor":{"vals":[ "-f", {"subst":"tee_split_teepot_fval", "ifnull":{"subst":"teepot_fval"}} ]}}},
			{"subst":"bwa_aln_teepot_pflag", "ifnull":{"subst":"teepot_pval"}, "comment":"default to no flag; should be set to -p or -P"},
			{"port":"aln_1", "direction":"out"},
			{"port":"aln_2", "direction":"out"},
			{"port":"sampe_1", "direction":"out"},
			{"port":"sampe_2", "direction":"out"}
		]
	},
	{
		"id":"bwa_aln_1",
		"type":"EXEC",
		"use_STDIN":false,
		"use_STDOUT":true,
		"cmd":[ {"subst":"bwa_executable"}, "aln", "-t", {"subst":"aligner_numthreads"}, "-b1", {"port":"reference_genome_fasta", "direction":"in"}, {"port":"bam_in", "direction":"in"} ]
	},
	{
		"id":"bwa_aln_2",
		"type":"EXEC",
		"use_STDIN":false,
		"use_STDOUT":true,
		"cmd":[ {"subst":"bwa_executable"}, "aln", "-t", {"subst":"aligner_numthreads"}, "-b2", {"port":"reference_genome_fasta", "direction":"in"}, {"port":"bam_in", "direction":"in"} ]
	},
        {
                "id":"simple_cat1",
                "type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
                "cmd":"cat"
        },
        {
                "id":"simple_cat2",
                "type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
                "cmd":"cat"
        },
        {
                "id":"bwa_sampe",
                "type":"EXEC",
		"use_STDIN":false,
		"use_STDOUT":true,
		"cmd":[ {"subst":"bwa_executable"}, "sampe", {"port":"reference_genome_fasta", "direction":"in"}, {"port":"sai_1", "direction":"in"}, {"port":"sai_2", "direction":"in"}, {"port":"bam_1", "direction":"in"}, {"port":"bam_2", "direction":"in"} ]
        },
        {
                "id":"samtobam",
                "type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
                "cmd":[
			{"subst":"samtools_executable"}, "view", "-b",
			{"subst_constructor":{"vals":[ "--output-fmt-option", {"subst_constructor":{"vals":[ "level", {"subst":"s2b_compression_level","ifnull":0} ], "postproc":{"op":"concat", "pad":"="}}}]}},
			{"subst_constructor":{"vals":[ "--threads", {"subst":"s2b_threads","ifnull":{"subst":"s2b_mt_val"}}]}},
			"-"
		]
        }
],
"edges":[
	{ "id":"bwa_aln_bam1", "from":"tee4:aln_1", "to":"bwa_aln_1:bam_in" },
	{ "id":"bwa_aln_bam2", "from":"tee4:aln_2", "to":"bwa_aln_2:bam_in" },
	{ "id":"tee_to_cat1", "from":"tee4:sampe_1", "to":"simple_cat1" },
	{ "id":"cat1_to_sampe1", "from":"simple_cat1", "to":"bwa_sampe:bam_1" },
	{ "id":"tee_to_cat2", "from":"tee4:sampe_2", "to":"simple_cat2" },
	{ "id":"cat1_to_sampe2", "from":"simple_cat2", "to":"bwa_sampe:bam_2" },
	{ "id":"aln1_sai_to_sampe", "from":"bwa_aln_1", "to":"bwa_sampe:sai_1" },
	{ "id":"aln2_sai_to_sampe", "from":"bwa_aln_2", "to":"bwa_sampe:sai_2" },
	{ "id":"bwa_sampe_to_s2b", "from":"bwa_sampe", "to":"samtobam" }
]
}
