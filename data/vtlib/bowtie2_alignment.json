{
"version":"2.0",
"description":"run bowtie2 to to align input bam to supplied reference genome",
"subgraph_io":{
	"ports":{
		"inputs":{
			"_stdin_":"bamtofastq",
			"reference":"bowtie2:db_prefix_reference_genome"
		},
		"outputs":{
			"_stdout_":"samtobam"
		}
	}
},
"subst_params":[
        {
                "id": "basic_pipeline_params",
                "type":"SPFILE",
		"name":{"subst":"basic_pipeline_params_file"},
                "required": "no",
                "comment":"this will expand to a set of subst_param elements"
        }
],
"nodes":[
        {
                "id":"bamtofastq",
                "type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":[ {"subst":"samtools_executable"}, "fastq",
			{"subst":"bt2_bamtofastq_arbitrary_flags"},
                        "-"
		]
        },
	{
		"id":"bowtie2",
		"comment":"user is responsible for selecting appropriate preselect for alignment mode (all combinations allowed, but some may not be sensible)",
		"type":"EXEC",
		"use_STDIN":false,
		"use_STDOUT":true,
		"cmd":[
			{"subst":"bowtie2_executable", "ifnull": "bowtie2"},
			"-p", {"subst":"bowtie2_numthreads", "ifnull":{"subst":"aligner_numthreads"}},
			{"select":"bowtie2_alignment_mode", "required":false, "select_range":[1], "default":"local", "cases":{"local":"--local","end-to-end":[]},"comment":"bowtie2 alignment mode"},
			{"select":"bowtie2_preset_options", "required":true, "select_range":[1], "default":"very-sensitive-local",
			"cases":{
				"very-fast":"--very-fast",
				"fast":"--fast",
				"sensitive":"--sensitive",
				"very-sensitive":"--very-sensitive",
				"very-fast-local":"--very-fast-local",
				"fast-local":"--fast-local",
				"sensitive-local":"--sensitive-local",
				"very-sensitive-local":"--very-sensitive-local"
			}},
			{"subst":"bowtie2_reorder_flag", "ifnull":"--reorder"},
			{"subst":"bowtie2_arbitrary_flags"},
			"-U", {"port":"fq","direction":"in"},
			"-x", {"port":"db_prefix_reference_genome", "direction":"in"}
		]
	},
	{
		"id":"remove_read_suffixes",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
                "cmd":[ "perl", "-nale", "use strict; $,=qq(\\t); our($body,@lpg, $pgc); if($body||=not m{^\\@}){if(@lpg){my$cl=qx{cat /proc/self/cmdline | tr '\\0\\t' ' '}; print join qq[\\t], q(@PG),qq(ID:perlfoo_$pgc),q(PN:perl),q(DS:fixup paired read bits name suffixes),q(PP:).(shift@lpg),q(CL:).$cl} if($F[0]=~s{/([12])$}{}){ $F[1]= $1==1?$F[1]|0x41:$F[1]|0x81} print join qq(\\t),@F}else{@lpg=($1); $pgc++; if m{^\\@PG.*\\tID:([^\\t]+)}; print}" ],
		"description":"remove /1 and /2 read suffixes, updating the flags to reflect read number"
	},
        {
                "id":"samtobam",
                "type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[
			{"select":"bowtie2_post_aln_process", "required":true, "select_range":[1], "default":"fixmate",
			"cases":{
				"fixmate": [ {"subst":"samtools_executable"}, "fixmate", "-u", "-", "-" ],
				"bamconvert": [ {"subst":"samtools_executable"}, "view", "-u", "-" ],
				"namesort": [ {"subst":"samtools_executable"}, "sort", "-n",  "-u", "-" ],
				"fastcollate": [ {"subst":"samtools_executable"}, "collate", "-f",  "-u", "-O", "--threads", 3, "-" ]
			}}
		]
        }
],
"edges":[
	{ "id":"bamtofastq1_to_bowtie2", "from":"bamtofastq", "to":"bowtie2:fq" },
	{ "id":"bowtie2_to_remove_read_suffixes", "from":"bowtie2", "to":"remove_read_suffixes" },
	{ "id":"remove_read_suffixes_to_samtobam", "from":"remove_read_suffixes", "to":"samtobam" }
]
}
