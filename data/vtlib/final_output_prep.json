{
"version":"2.0",
"description":"steps in the alignment pipeline to post-process bam files produced by the AlignmentFilter",
"subgraph_io":{
	"ports":{
		"inputs":{ "_stdin_":"markdup" },
		"outputs":{ "_stdout_":"seqchksum_file" }
	}
},
"subst_params":[
	{
		"id": "basic_pipeline_params",
		"type":"SPFILE",
		"name":{"subst":"basic_pipeline_params_file"},
		"required": "no",
		"comment":"this will expand to a set of subst_param elements"
	},
	{
		"id":"bs_tmpfile_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "tmpfile=", {"subst":"outdatadir"}, "/", {"subst":"bstmp"}, "_", {"subst":"fopid"}, ".tmp" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"bsmd_threads",
		"subst_constructor":{
			"vals":[ "threads", {"subst":"aligner_numthreads"} ],
			"postproc":{"op":"concat", "pad":"="}
		}
	},
	{
		"id":"scramble_reference_flag",
		"required":"no",
		"comment":"flag will disappear unless scramble_reference_fasta value is given (allows unaligned cram)",
		"subst_constructor":{ "vals":[ "-r", {"subst":"scramble_reference_fasta"} ] }
	},
	{
		"id":"stats_reference_flag",
		"required":"no",
		"comment":"flag will disappear unless scramble_reference_fasta value is given",
		"subst_constructor":{ "vals":[ "-r", {"subst":"scramble_reference_fasta"} ] }
	},
	{
		"id":"scramble_seqperslice_flag",
		"required":"no",
		"comment":"flag will disappear unless scramble_seqperslice_value is given (used for unaligned crams)",
		"subst_constructor":{ "vals":[ "-s", {"subst":"scramble_seqperslice_value"} ] }
	},
	{
		"id":"bmd_tmpfile_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "tmpfile=", {"subst":"outdatadir"}, "/", {"subst":"bmdtmp","required":"yes"}, "_", {"subst":"fopid"}, ".tmp" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"bmd_metrics_file_flag",
		"required":"no",
		"comment":"changed flag to -f since markdup is now done with samtools",
		"subst_constructor":{
			"vals":[ "M=", {"subst":"outdatadir"}, "/", {"subst":"fopid"}, ".markdups_metrics.txt" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"stmd_metrics_file",
		"required":"no",
		"comment":"changed flag to -f since markdup is now done with samtools",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, ".markdups_metrics.txt" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"bmd_resetdupflag",
		"comment":"this option should only be used with bamstreamingmarkduplicates (not bammarkduplicates or bammarkduplicates2)",
		"subst_constructor":{
			"vals":[ "resetdupflag", {"subst":"bmd_resetdupflag_val"} ],
			"postproc":{"op":"concat", "pad":"="}
		}
	},
	{"id":"bmd_cmd","required":"no","default":"bamstreamingmarkduplicates"},
	{"id":"stats_filter__F0x900","required":"no","default":"0x900"},
	{"id":"stats_filter__F0xB00","required":"no","default":"0xB00"},
	{"id":"stats_filter__F0xF04","required":"no","default":"0xF04"},
	{"id":"stats_filter__cov_threshold","required":"no","default":"15"},
	{"id":"bam_stats_executable","required":"no","default":"bam_stats"},
        {"id":"bait_regions_file","required":"yes","comment":"regions file for optional bait stats"},
        {"id":"target_regions_file","required":"yes","comment":"regions file for optional target regions stats"},
        {"id":"target_autosome_regions_file","required":"yes","comment":"regions file for optional target autosome only regions stats"},
        {"id":"calibration_pu_executable","required":"no","default":"calibration_pu"},
        {"id":"calibration_pu_bad_tiles_count","required":"no","default":"2"},
        {
                "id":"calibration_pu_prefix",
                "required":"yes",
                "subst_constructor":{
                    "vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"} ],
                    "postproc":{"op":"concat", "pad":""}
                }
        },
	{"id":"seqchksum_hash_type","required":"no","default":"sha512primesums512"},
	{
		"id":"seqchksum_hash_flag",
		"required":"yes",
		"subst_constructor":{
			"vals":[ "hash", {"subst":"seqchksum_hash_type"} ],
			"postproc":{"op":"concat","pad":"="}
		}
	},
	{
		"id":"br_indexfile_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "indexfilename=", {"subst":"outdatadir"}, "/", {"subst":"fopid"}, ".bai" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"br_md5file_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "md5filename=", {"subst":"outdatadir"}, "/", {"subst":"fopid"}, ".bam.md5" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"br_numthreads_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "numthreads=", {"subst":"br_numthreads_val"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"br_tmpfile_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "tmpfile=", {"subst":"outdatadir"}, "/", {"subst":"brtmp"}, "_", {"subst":"fopid"}, ".tmp" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"id":"flagstats_filter_flag","required":"no","default":"0x900"},
	{"id":"fopid","required":"yes"},
	{
		"id":"bam_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, {"subst":"bam_ext"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"cram_file",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, {"subst":"cram_ext"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"crai_file",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, {"subst":"cram_idx_ext"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"cram_md5",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, ".cram.md5" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"seqchksum_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, ".seqchksum" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"seqchksum_file_cram",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"tmpdir"}, "/", {"subst":"fopid"}, ".cram.seqchksum" ],
			"postproc":{"op":"concat", "pad":""}
		},
		"comment":"this temporary file is used for removing blocking problems at cmp_seqchksum"
	},
	{
		"id":"seqchksum_extrahash_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, ".", {"subst":"seqchksum_hash_type"}, ".seqchksum" ],
			"postproc":{"op":"concat", "pad":""}
		},
		"comment":"default hash type is currently sha512primesums512"
	},
	{
		"id":"stats_F0x900_file",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, "_F0x900.stats" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"stats_F0xB00_file",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, "_F0xB00.stats" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"stats_F0x900_bait_file",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, "_F0x900_bait.stats" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"stats_F0xB00_bait_file",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, "_F0xB00_bait.stats" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"stats_F0xF04_target_file",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, "_F0xF04_target.stats" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"stats_F0xF04_target_autosome_file",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, "_F0xF04_target_autosome.stats" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"bam_stats_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, ".bam_stats" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"flagstat_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"fopid"}, ".flagstat" ],
			"postproc":{"op":"concat", "pad":""}
		}
	}
],
"nodes":[
	{
		"id":"markdup",
		"description":"mark duplicates method",
		"type":"VTFILE",
		"comment":"inputs: _stdin_ (filtered bam); outputs: _stdout_ (bam, same as input)",
		"node_prefix_tba":"markdup_",
		"name":{
			"select":"markdup_method", "required":true, "select_range":[1], "default":"biobambam",
			"cases":{
				"samtools":"markdup_samtools.json",
				"picard":"markdup_picard.json",
				"biobambam":"markdup_biobambam.json",
				"duplexseq":"markdup_duplexseq.json",
				"none":"markdup_none.json"
			}
		}
	},
	{
		"id":"bam_stats",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": false,
		"cmd": [ {"subst":"bam_stats_executable"}, {"subst":"stats_reference_flag"}, "-o", {"subst":"bam_stats_file"} ],
		"comment":"CGP bam_stats"
	},
	{
		"id":"bmd_multiway",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": false,
		"comment":"specify parameter value teepot_tempdir_value to specify teepot tempdir",
		"cmd":[
			"teepot",
			{"subst":"teepot_vflag", "ifnull":"-v"},
			{"subst":"teepot_tempdir_flag"},
			"-w", {"subst":"fomw_teepot_wval", "ifnull":"300"},
			{"port":"scramble", "direction":"out"},
			{"port":"flagstat", "direction":"out"},
			{"port":"calibration_pu", "direction":"out"},
			{"port":"bam", "direction":"out"},
			{"port":"samtools_stats_F0x900", "direction":"out"},
			{"port":"samtools_stats_F0xB00", "direction":"out"},
			{"port":"bam_stats", "direction":"out"},
			{"port":"seqchksum", "direction":"out"},
			{"port":"seqchksum_extrahash", "direction":"out"},
			{"port":"samtools_stats_F0x900_bait", "direction":"out"},
			{"port":"samtools_stats_F0xB00_bait", "direction":"out"},
			{"port":"samtools_stats_F0xF04_target", "direction":"out"},
			{"port":"samtools_stats_F0xF04_target_autosome", "direction":"out"}
		]
	},
	{
		"id":"scramble",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
                "cmd":[
			"scramble",
			{"subst":"b2c_mt", "ifnull":{"subst_constructor":{ "vals":[ "-t", {"subst":"b2c_mt_val"} ]}}},
			{"subst":"b2c_fmtver", "ifnull":{"subst_constructor":{ "vals":[ "-V", {"subst":"b2c_format_version"} ]}}},
			{"subst":"b2c_compress_level", "ifnull":"-7"},
			"-I", "bam",
			"-O", "cram",
			{"subst":"scramble_reference_flag"},
			{"subst":"scramble_seqperslice_flag"},
			{"select":"b2c_scramble_bzip2","default":0,"select_range":[0,1],
				"cases":[
					[],
					"-j"
				]
			},
			{"select":"b2c_scramble_lzma","default":0,"select_range":[0,1],
				"cases":[
					[],
					"-Z"
				]
			},
			{"select":"scramble_embed_reference","default":0,"select_range":[0,1],
				"cases":[
					[],
					"-e"
				]
			},
			{"subst":"b2c_arbitrary_flags", "comment":"this allows arbitrary sets of flag strings to be inserted in the command" }
		]	
	},
	{
		"id":"scramble_tee",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": false,
		"cmd":[
			"teepot",
			{"subst":"teepot_vflag", "ifnull":"-v"},
			{"subst":"teepot_tempdir_flag"},
			"-w", "30000",
			{"port":"cram", "direction":"out"},
			{"port":"crai", "direction":"out"},
			{"port":"md5", "direction":"out"},
			{"port":"seqchksum", "direction":"out"}
		],
		"comment":"allow a generous 500 minutes for the teepot timeout; specify parameter value teepot_tempdir_value to specify teepot tempdir"
	},
	{
		"id":"scramble_md5",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":"md5sum"
	},
	{
		"id":"postprocess_md5",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":[ "tr", "-d", " \\-\n" ],
		"comment":"the double-backslash is required to get the correct character set to the tr command"
	},
	{
		"id":"cram_index",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": false,
		"cmd":[ "cram_index", "-", {"subst":"crai_file"} ]
	},
	{
		"id":"cram_seqchksum",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":[ "bamseqchksum", "inputformat=cram" ]
	},
	{
		"id":"samtools_stats_F0x900",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ {"subst":"samtools_executable"}, "stats", {"subst":"stats_reference_flag"}, "-F", {"subst":"stats_filter__F0x900"}, "-" ]
	},
	{
		"id":"samtools_stats_F0x900_bait",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ {"subst":"samtools_executable"}, "stats", {"subst":"stats_reference_flag"}, "-F", {"subst":"stats_filter__F0x900"},"-t",{"subst":"bait_regions_file"}, "-" ]
	},
	{
		"id":"samtools_stats_F0xB00",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ {"subst":"samtools_executable"}, "stats", {"subst":"stats_reference_flag"}, "-F", {"subst":"stats_filter__F0xB00"}, "-" ]
	},
	{
		"id":"samtools_stats_F0xB00_bait",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ {"subst":"samtools_executable"}, "stats", {"subst":"stats_reference_flag"}, "-F", {"subst":"stats_filter__F0xB00"},"-t",{"subst":"bait_regions_file"},"-" ]
	},
	{
		"id":"samtools_stats_F0xF04_target",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ {"subst":"samtools_executable"}, "stats", {"subst":"stats_reference_flag"}, "-p", "-g", {"subst":"stats_filter__cov_threshold"},"-F", {"subst":"stats_filter__F0xF04"},"-t",{"subst":"target_regions_file"},"-" ]
	},
	{
		"id":"samtools_stats_F0xF04_target_autosome",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ {"subst":"samtools_executable"}, "stats", {"subst":"stats_reference_flag"}, "-p", "-g", {"subst":"stats_filter__cov_threshold"},"-F", {"subst":"stats_filter__F0xF04"},"-t",{"subst":"target_autosome_regions_file"},"-" ]
	},
	{
		"id":"seqchksum",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":[ "bamseqchksum" ]
	},
	{
		"id":"seqchksum_extrahash",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ "bamseqchksum", {"subst":"seqchksum_hash_flag"} ],
		"comment":"default hash type is currently sha512primesums512"
	},
	{
		"id":"calibration_pu",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": false,
		"cmd": [ {"subst":"calibration_pu_executable"}, "-p", {"subst":"calibration_pu_prefix"}, "-filter-bad-tiles", {"subst":"calibration_pu_bad_tiles_count"}, "-" ]
	},
	{
		"id":"bamrecompress",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ "bamrecompress", "verbose=0", "index=1", {"subst":"br_indexfile_flag"}, "md5=1", {"subst":"br_md5file_flag"}, {"subst":"br_numthreads_flag"}, {"subst":"br_tmpfile_flag"} ]
	},
	{ "id":"bam_file", "type":"OUTFILE", "name":{"subst":"bam_file"} },
	{ "id":"cram_file", "type":"OUTFILE", "name":{"subst":"cram_file"} },
	{ "id":"cram_md5", "type":"OUTFILE", "name":{"subst":"cram_md5"} },
	{ "id":"seqchksum_file", "type":"RAFILE", "name":{"subst":"seqchksum_file"} },
	{ "id":"seqchksum_file_cram", "type":"RAFILE", "name":{"subst":"seqchksum_file_cram"}, "comment":"this file is a temporary fix for blocking problems at the cmp_seqchksum node" },
	{ "id":"seqchksum_extrahash_file", "type":"OUTFILE", "name":{"subst":"seqchksum_extrahash_file"} },
	{ "id":"stats_F0x900_file", "type":"OUTFILE", "name":{"subst":"stats_F0x900_file"} },
	{ "id":"stats_F0xB00_file", "type":"OUTFILE", "name":{"subst":"stats_F0xB00_file"} },
	{ "id":"stats_F0x900_bait_file", "type":"OUTFILE", "name":{"subst":"stats_F0x900_bait_file"} },
	{ "id":"stats_F0xB00_bait_file", "type":"OUTFILE", "name":{"subst":"stats_F0xB00_bait_file"} },
	{ "id":"stats_F0xF04_target_file", "type":"OUTFILE", "name":{"subst":"stats_F0xF04_target_file"} },
	{ "id":"stats_F0xF04_target_autosome_file", "type":"OUTFILE", "name":{"subst":"stats_F0xF04_target_autosome_file"} },
	{ "id":"flagstat_file", "type":"OUTFILE", "name":{"subst":"flagstat_file"} },
	{
		"id":"flagstat_filter",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ {"subst":"samtools_executable"}, "view", "-u", "-F", {"subst":"flagstats_filter_flag"}, "-" ],
		"description":"Filter out secondary and supplementary alignment records"
	},
	{
		"id":"flagstat",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd": [ {"subst":"samtools_executable"}, "flagstat", "-" ]
	},
	{
		"id":"cmp_seqchksum",
		"type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": true,
		"cmd":[
			"cmp",
			{"port":"bam_seqchksum", "direction":"in"},
			{"port":"cram_seqchksum", "direction":"in"}
		]
	}
],
"edges":[
	{ "id":"markdup_to_multiway", "from":"markdup", "to":"bmd_multiway" },
	{ "id":"bmdmw_to_scramble", "from":"bmd_multiway:scramble", "to":"scramble" },
	{ "id":"scramble_to_scramble_tee", "from":"scramble", "to":"scramble_tee" },
	{ "id":"scramble_tee_to_md5", "from":"scramble_tee:md5", "to":"scramble_md5" },
	{ "id":"scramble_tee_to_crai", "from":"scramble_tee:crai", "to":"cram_index" },
	{ "id":"scramble_tee_to_bscs", "from":"scramble_tee:seqchksum", "to":"cram_seqchksum" },
	{ "id":"md5_to_postprocess", "from":"scramble_md5", "to":"postprocess_md5" },
	{ "id":"bmdmw_to_sts_F0x900", "from":"bmd_multiway:samtools_stats_F0x900", "to":"samtools_stats_F0x900" },
	{ "id":"bmdmw_to_sts_F0xB00", "from":"bmd_multiway:samtools_stats_F0xB00", "to":"samtools_stats_F0xB00" },
	{ "id":"bmdmw_to_sts_F0x900_bait", "from":"bmd_multiway:samtools_stats_F0x900_bait", "to":"samtools_stats_F0x900_bait" },
	{ "id":"bmdmw_to_sts_F0xB00_bait", "from":"bmd_multiway:samtools_stats_F0xB00_bait", "to":"samtools_stats_F0xB00_bait" },
	{ "id":"bmdmw_to_sts_F0xF04_target", "from":"bmd_multiway:samtools_stats_F0xF04_target", "to":"samtools_stats_F0xF04_target" },
	{ "id":"bmdmw_to_sts_F0xF04_target_autosome", "from":"bmd_multiway:samtools_stats_F0xF04_target_autosome", "to":"samtools_stats_F0xF04_target_autosome" },
	{ "id":"bmdmw_to_bam_stats", "from":"bmd_multiway:bam_stats", "to":"bam_stats" },
	{ "id":"bmdmw_to_calibration_pu", "from":"bmd_multiway:calibration_pu", "to":"calibration_pu" },
	{ "id":"bmdmw_to_seqchksum", "from":"bmd_multiway:seqchksum", "to":"seqchksum" },
	{ "id":"bmdmw_to_seqchksum_extrahash", "from":"bmd_multiway:seqchksum_extrahash", "to":"seqchksum_extrahash" },
	{ "id":"bmdmw_to_flagstat", "from":"bmd_multiway:flagstat", "to":"flagstat_filter" },
	{ "id":"flagstat_filter_to_flagstat", "from":"flagstat_filter", "to":"flagstat" },
	{ "id":"bmd_to_bam", "from":"bmd_multiway:bam", "to":"bamrecompress" },
	{ "id":"brc_to_bam", "from":"bamrecompress", "to":"bam_file" },
	{ "id":"tee_to_cram", "from":"scramble_tee:cram", "to":"cram_file" },
	{ "id":"corrected_md5_out", "from":"postprocess_md5", "to":"cram_md5" },
	{ "id":"scs_to_tee", "from":"seqchksum", "to":"seqchksum_file" },
	{ "id":"scs_file_to_cmp", "from":"seqchksum_file", "to":"cmp_seqchksum:bam_seqchksum" },
	{ "id":"scs_extrahash_to_file", "from":"seqchksum_extrahash", "to":"seqchksum_extrahash_file" },
	{ "id":"samtools_stats_F0x900_to_file", "from":"samtools_stats_F0x900", "to":"stats_F0x900_file" },
	{ "id":"samtools_stats_F0xB00_to_file", "from":"samtools_stats_F0xB00", "to":"stats_F0xB00_file" },
	{ "id":"samtools_stats_F0x900_bait_to_file", "from":"samtools_stats_F0x900_bait", "to":"stats_F0x900_bait_file" },
	{ "id":"samtools_stats_F0xB00_bait_to_file", "from":"samtools_stats_F0xB00_bait", "to":"stats_F0xB00_bait_file" },
	{ "id":"samtools_stats_F0xF04_target_to_file", "from":"samtools_stats_F0xF04_target", "to":"stats_F0xF04_target_file" },
	{ "id":"samtools_stats_F0xF04_target_autosome_to_file", "from":"samtools_stats_F0xF04_target_autosome", "to":"stats_F0xF04_target_autosome_file" },
	{ "id":"flagstat_to_file", "from":"flagstat", "to":"flagstat_file" },
	{ "id":"cscs_to_file", "from":"cram_seqchksum", "to":"seqchksum_file_cram" },
	{ "id":"cscsfile_to_cmp", "from":"seqchksum_file_cram", "to":"cmp_seqchksum:cram_seqchksum" }
]
}
